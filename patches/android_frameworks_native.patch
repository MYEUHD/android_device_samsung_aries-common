From 70bfccbcd21cc7e12a853116a6e3117d66583af7 Mon Sep 17 00:00:00 2001
From: Kyle Repinski <repinski23@gmail.com>
Date: Wed, 10 Jun 2015 18:49:57 -0500
Subject: [PATCH 1/2] egl: Add back b/10194508 workaround.

This was removed because it did not pass CTS and was applied across the board
for all OMAP4 devices, but some still-shipping OMAP4 devices don't need it
due to using DDK 1.12 drivers. Those drivers are only for OMAP4470 though,
and other devices besides OMAPs depend on this workaround too, and we don't
care about CTS for them anyway.

This patch adds this previously-long-standing behavior (EGL_NATIVE_VISUAL_ID)
back under the opt-in BOARD_EGL_WORKAROUND_BUG_10194508 flag.

Omni 6.0:
opengl/libs/Android.mk parts haven't been removed on 6.0 merge, only
opengl/libs/EGL/eglApi.cpp parts

Change-Id: Ie611634952a35dc756f1de806c850235caf73544

Conflicts:
	opengl/libs/Android.mk
---
 opengl/libs/Android.mk     | 5 +++++
 opengl/libs/EGL/eglApi.cpp | 9 +++++++++
 2 files changed, 14 insertions(+)

diff --git a/opengl/libs/Android.mk b/opengl/libs/Android.mk
index 18ad300..918a073 100644
--- a/opengl/libs/Android.mk
+++ b/opengl/libs/Android.mk
@@ -47,6 +47,11 @@ LOCAL_CFLAGS += -DEGL_TRACE=1
 ifeq ($(BOARD_ALLOW_EGL_HIBERNATION),true)
   LOCAL_CFLAGS += -DBOARD_ALLOW_EGL_HIBERNATION
 endif
+
+ifeq ($(BOARD_EGL_WORKAROUND_BUG_10194508),true)
+  LOCAL_CFLAGS += -DWORKAROUND_BUG_10194508
+endif
+
 ifneq ($(MAX_EGL_CACHE_ENTRY_SIZE),)
   LOCAL_CFLAGS += -DMAX_EGL_CACHE_ENTRY_SIZE=$(MAX_EGL_CACHE_ENTRY_SIZE)
 endif
diff --git a/opengl/libs/EGL/eglApi.cpp b/opengl/libs/EGL/eglApi.cpp
index cdec565..1b702bc 100644
--- a/opengl/libs/EGL/eglApi.cpp
+++ b/opengl/libs/EGL/eglApi.cpp
@@ -466,6 +466,14 @@ EGLSurface eglCreateWindowSurface(  EGLDisplay dpy, EGLConfig config,
         EGLint format = HAL_PIXEL_FORMAT_RGBA_8888;
         android_dataspace dataSpace = HAL_DATASPACE_UNKNOWN;
 
+#ifdef WORKAROUND_BUG_10194508
+        if (!cnx->egl.eglGetConfigAttrib(iDpy, config, EGL_NATIVE_VISUAL_ID,
+                &format)) {
+            ALOGE("eglGetConfigAttrib(EGL_NATIVE_VISUAL_ID) failed: %#x",
+                    eglGetError());
+            format = 0;
+        }
+#else
         EGLint a = 0;
         cnx->egl.eglGetConfigAttrib(iDpy, config, EGL_ALPHA_SIZE, &a);
         if (a > 0) {
@@ -484,6 +492,7 @@ EGLSurface eglCreateWindowSurface(  EGLDisplay dpy, EGLConfig config,
                 format = HAL_PIXEL_FORMAT_RGBX_8888;
             }
         }
+#endif
 
         // now select a corresponding sRGB format if needed
         if (attrib_list && dp->haveExtension("EGL_KHR_gl_colorspace")) {
-- 
2.1.4


From baf3a0dbb88eef90a420bddccd5a319301378f77 Mon Sep 17 00:00:00 2001
From: xc-racer99 <xc-racer2@live.ca>
Date: Tue, 12 Apr 2016 20:11:51 -0700
Subject: [PATCH 2/2] surfaceflinger: Comment out context priority error

Since we're compiling with -Wall, we can't have the warning
---
 services/surfaceflinger/RenderEngine/RenderEngine.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/services/surfaceflinger/RenderEngine/RenderEngine.cpp b/services/surfaceflinger/RenderEngine/RenderEngine.cpp
index 7cd42e4..6039961 100644
--- a/services/surfaceflinger/RenderEngine/RenderEngine.cpp
+++ b/services/surfaceflinger/RenderEngine/RenderEngine.cpp
@@ -83,7 +83,7 @@ RenderEngine* RenderEngine::create(EGLDisplay display, int hwcFormat) {
             EGL_CONTEXT_CLIENT_VERSION, contextClientVersion,      // MUST be first
 #ifdef EGL_IMG_context_priority
 #ifdef HAS_CONTEXT_PRIORITY
-#warning "using EGL_IMG_context_priority"
+//#warning "using EGL_IMG_context_priority"
             EGL_CONTEXT_PRIORITY_LEVEL_IMG, EGL_CONTEXT_PRIORITY_HIGH_IMG,
 #endif
 #endif
-- 
2.1.4

